
Historial de Solicitudes del Proyecto

**Día: 2023-10-27**

- **Solicitud 1: Implementar Calendario Interactivo**
  - **Requisitos:**
    - Crear un calendario en el panel del estudiante.
    - Marcar días con actividades pendientes con un punto rojo.
    - Al hacer clic en un día, mostrar detalles de la actividad en un panel lateral.
    - El panel debe incluir información del evento y un enlace a la entrega.

- **Solicitud 2: Corregir Error en el Calendario**
  - **Error:** `Runtime Error: Cannot read properties of undefined (reading 'marked')`.
  - **Causa:** Se intentaba acceder a `props.modifiers.marked` cuando `props.modifiers` podía ser `undefined`.
  - **Solución:** Añadir una verificación de seguridad (`props.modifiers?.marked`) para evitar el error.

- **Solicitud 3: Arreglar Error Visual en Menú Lateral Móvil**
  - **Problema:** El menú lateral se mostraba con fondo gris en lugar de azul en pantallas pequeñas.
  - **Solución:** Asegurar que el menú mantenga los colores corporativos (fondo azul, texto blanco) en todas las resoluciones aplicando la clase `bg-primary`.

- **Solicitud 4: Corregir Error de Consola en `useSearchParams`**
  - **Error:** `params are being enumerated. 'params' should be unwrapped with 'React.use()'`.
  - **Causa:** El componente de migas de pan (`Breadcrumbs`) estaba usando `useSearchParams` de una manera obsoleta.
  - **Solución:** Eliminar el uso innecesario de `useSearchParams` y basar la lógica únicamente en `usePathname`.

- **Solicitud 5: Cambiar Color del Scrollbar en Menú Lateral**
  - **Requisito:** El fondo de la barra de desplazamiento debe coincidir con el color de fondo del menú.
  - **Solución:** Añadir clases de Tailwind (`scrollbar-thumb-accent`, `scrollbar-track-primary`) para personalizar el estilo del scrollbar.

- **Solicitud 6: Corregir Error de Compilación `tailwind-scrollbar`**
  - **Error:** `Error: Cannot find module 'tailwind-scrollbar'`.
  - **Causa:** El plugin `tailwind-scrollbar` estaba requerido en la configuración de Tailwind pero no estaba instalado.
  - **Solución:** Añadir el paquete `tailwind-scrollbar` a las dependencias en `package.json`.

---

**Día: 2023-10-28**

- **Solicitud 1: Implementar Funcionalidad de Cambio de Contraseña**
  - **Requisitos:**
    - Validación de campos (obligatorios, longitud, coincidencia).
    - Lógica de backend con reautenticación de Firebase (`reauthenticateWithCredential`) y actualización (`updatePassword`).
    - Mensajes de éxito y error claros.
    - Botón para ver/ocultar contraseña.

- **Solicitud 2: Corregir Error de Inicialización de Firebase**
  - **Error:** `FirebaseError: Firebase: No Firebase App '[DEFAULT]' has been created - call initializeApp() first`.
  - **Causa:** Se llamaba a `getAuth()` sin la inicialización de la app de Firebase.
  - **Solución:** Importar la instancia `auth` ya inicializada desde `src/lib/firebase.ts`.

- **Solicitud 3: Adaptar Cambio de Contraseña sin Firebase Auth**
  - **Problema:** El sistema no usa Firebase Auth, sino un sistema de roles simulado.
  - **Solución:** Crear un endpoint en el backend (`/api/change-password`) para manejar el cambio de contraseña sin depender de una sesión de Firebase Auth.

- **Solicitud 4: Solucionar Error de "Contraseña Actual Incorrecta"**
  - **Problema:** La lógica de verificación de la contraseña en el backend fallaba.
  - **Solución:** Mejorar la lógica del backend para comparar la contraseña actual de forma correcta, considerando que podía no estar encriptada.

- **Solicitud 5: Asegurar Cifrado de Contraseñas en el Registro**
  - **Problema:** Las contraseñas de nuevos usuarios no se cifraban (`hasheaban`) al registrarse.
  - **Solución:** Crear un endpoint (`/api/register-user`) que se encargue de cifrar la contraseña con `bcrypt` antes de guardarla en la base de datos.

- **Solicitud 6: Manejar Contraseñas de Usuarios Antiguos**
  - **Requisito:** El sistema debe ser capaz de manejar tanto contraseñas en texto plano como cifradas.
  - **Solución:** Implementar una lógica dual en el endpoint de cambio de contraseña que primero intenta comparar con `bcrypt` y, si falla, compara como texto plano. La nueva contraseña siempre se guarda cifrada, migrando así las antiguas.

- **Solicitud 7: Crear Historial de Prompts**
  - **Requisito:** Generar un archivo de texto (`prompt_history.txt`) con un historial de las solicitudes y fecha.
  - **Solución:** Crear el archivo en la raíz del proyecto.
  
---

**Día: 2023-10-29**

- **Solicitud 1: Implementar Formulario de Registro Multi-paso**
  - **Requisitos:**
    - Dividir el registro en 6 pasos: Datos Personales, Contacto, Académicos, Acceso, Inscripción y Confirmación.
    - Añadir una barra de progreso.
    - Validar cada paso con Zod antes de continuar.
    - Al final, enviar todos los datos a un endpoint (`/api/register-user`).

- **Solicitud 2: Implementar Lógica de Recuperación de Contraseña**
  - **Requisitos:**
    - Crear una página (`/forgot-password`) donde el usuario introduce su correo.
    - Crear un endpoint (`/api/request-reset-password`) que genere un token único y lo guarde en Firestore.
    - El token debe tener una fecha de expiración de 1 hora.
    - Enviar un correo al usuario con un enlace que incluya el token.

- **Solicitud 3: Implementar Página de Restablecimiento de Contraseña**
  - **Requisitos:**
    - Crear una página (`/reset-password`) que lea el token de la URL.
    - Crear un endpoint (`/api/reset-password`) que valide el token.
    - El token debe ser válido, no haber expirado y no haber sido usado.
    - Si el token es válido, permitir al usuario establecer una nueva contraseña.
    - La nueva contraseña debe ser cifrada con `bcrypt` y guardada en Firestore.
    - Invalidar el token después de su uso.

- **Solicitud 4: Crear Endpoint de Correo con IA Generativa**
  - **Requisitos:**
    - Crear un flow de Genkit en `src/ai/flows/send-verification-code.ts`.
    - El flow debe usar un modelo de IA (Gemini) para generar un correo electrónico en formato HTML.
    - El correo debe tener un diseño profesional y un código de verificación de 6 dígitos.
    - El flow debe ser llamado desde un endpoint o simular el envío de correos.

- **Solicitud 5: Implementar Página de Verificación de Código**
  - **Problema:** El flujo de recuperación de contraseña con token por correo puede ser complejo de configurar (Nodemailer, etc.).
  - **Solución Alternativa:** Crear una página de verificación (`/verify-code`) donde el usuario introduce un código de 6 dígitos que recibe por correo.
    - **Paso 1:** En la página de "olvidé mi contraseña", en lugar de generar y enviar un token, se genera un código de 6 dígitos y se guarda en el `localStorage` del navegador junto con la hora y el correo.
    - **Paso 2:** El usuario es redirigido a `/verify-code`.
    - **Paso 3:** El usuario introduce el código. La página lo valida contra el que está en `localStorage`.
    - **Paso 4:** Si es correcto y no ha expirado (ej. 10 minutos), se le permite ir a la página de restablecimiento de contraseña.

- **Solicitud 6: Corrección de error de compilación por exportación inexistente**
  - **Problema:** `Export carreraData doesn't exist in target module`
  - **Causa:** La variable `carreraData` en `src/lib/seed.ts` no estaba siendo exportada, impidiendo su uso en el formulario de registro.
  - **Solución:** Se añadió la palabra clave `export` a `carreraData` para hacerla accesible a otros módulos.

- **Solicitud 7: Corrección de error `Cannot convert undefined or null to object`**
  - **Problema:** Error de runtime en el formulario de registro.
  - **Causa:** Se intentaba acceder a la propiedad `.shape` de un esquema Zod que había sido modificado con `.refine()`, lo cual elimina dicha propiedad.
  - **Solución:** Se refactorizó la creación del esquema `step4Schema_materias`, separando el objeto base (`step4Object`) de la validación con `.refine()` para poder acceder a `.shape` del objeto base sin problemas.

- **Solicitud 8: Actualización de este historial**
  - **Requisito:** Actualizar el archivo `prompt_history.txt` con todos los cambios realizados en el proyecto.
  - **Solución:** Se editó este archivo para reflejar el historial completo de solicitudes y soluciones.
